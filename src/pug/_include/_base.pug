//- vars
block vars
- const thePageClass = `page--${PugPageClass}`
- const pageClass = isTop ? `page--top ${addClass}` : `${thePageClass} ${addClass}`
- const pageTitle = isTop ? options.siteName : `${options.siteName} | ${PugPageName}`
- const pageURL = rootUrl + PugFilePath
- const ogType = isTop ? "website" : "article"

doctype html
html(lang='ja', prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#")
    head
        meta(http-equiv="X-UA-Compatible", content="IE=edge, chrome=1")
        meta(charset='utf-8')
        title #{pageTitle}
        //- Page Setting
        link(rel="canonical" href=pageURL)
        meta(name='description', content=options.description)
        meta(name='keywords', content=options.keywords)
        meta(name="viewport" content="width=750")
        meta(name="apple-mobile-web-app-title", content="Palette1202")
        meta(name="application-name", content="Palette1202")
        meta(name="theme-color", content="#0025f0")
        meta(name="format-detection", content="telephone=no")
        link(rel="shortcut icon" href="/images/favicon.ico")
        link(rel="apple-touch-icon" href="/img/apple-touch-icon.png")

        // OGP
        meta(name="twitter:card" content="summary_large_image")
        meta(name="twitter:site" content=options.twitterID)
        meta(name="twitter:title" content=pageTitle)
        meta(name="twitter:description" content=options.description)
        meta(name="twitter:image:src" content=options.ogpImage)
        meta(property="og:url" content=pageURL)
        meta(property="og:type" content=ogType)
        meta(property="og:title" content=pageTitle)
        meta(property="og:site_name" content=options.siteName)
        meta(property="og:description" content=options.description)
        meta(property="og:image" content=options.ogpImage)
        //- CSS Setting
        link(rel='stylesheet', href="./css/style.css")
        block link
        script
            |(function(d) {
            |var config={ kitId: 'mdj8bfb', scriptTimeout: 3000, async: true },
            |h=d.documentElement,
            |t=setTimeout(function () {h.className = h.className.replace(/\bwf-loading\b/g, "") + " wf-inactive";},config.scriptTimeout),
            |tk=d.createElement("script"),f=false,s=d.getElementsByTagName("script")[0],a;
            |tk.src='https://use.typekit.net/'+config.kitId+'.js';tk.async=true;
            |tk.onload=tk.onreadystatechange=function(){
            |a=this.readyState;if(f||a&&a!="complete"&&a!="loaded")return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s)
            |})(document);

    body(class=pageClass)

        block body
        script(src='./js/app.js')

        block script
